#! /usr/local/bin/python
# -*- coding: utf-8 -*-
from __future__ import print_function

import os, sys
import subprocess
from neovim import attach
from neovim.api.nvim import NvimError
try:
    import queue
except ImportError:
    import Queue as queue
import sys

OPEN = "/usr/bin/open"
EDITOR = "/usr/local/bin/nvim"
LISTEN_ADDR = "/tmp/nvim"
GRADER_NAME = "KÃ¡ri Tristan, kari12@ru.is"

def establish_connection():
    try:
        nvim = attach('socket', path=LISTEN_ADDR)
    except Exception as e:
        print("Make sure nvim is running and listening on the local socket /tmp/nvim.")
        sys.exit(1)
    return nvim

def main():
    os.chdir(sys.argv[1])
    done_file = os.path.join(os.path.dirname(sys.argv[0]), 'grade_done.state')
    done = []
    nvim = establish_connection()
    if os.path.exists(done_file):
        with open(done_file) as f:
            done = f.read().splitlines()

    path = open(done_file, 'a')
    listdir = os.listdir('.')
    q = queue.deque([i for i in filter(os.path.isdir, listdir) if i not in done])

    #TODO: chdir in nvim
    # Handle path with spaces!
    while len(q) > 0:
        s = q.pop()
        print('Moving to: %s' % s)
        os.chdir(s)
        nvim.command('cd %s' % s)
        dircontents = os.listdir('.')
        print(dircontents)
        path.write(s + "\n")
        try:
            nvim.command('e %s' % os.path.normpath(os.path.join(s, dircontents[0])))
            nvim.buffers[0].append("-%s" % GRADER_NAME)
        except NvimError as e:
            print(e)

        raw_input()

        os.chdir('..')

if __name__ == '__main__':
    main()
